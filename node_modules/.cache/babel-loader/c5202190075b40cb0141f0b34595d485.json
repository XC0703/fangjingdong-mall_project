{"ast":null,"code":"import { ref, watchEffect, watch, unref, computed, onMounted, nextTick } from 'vue';\nimport { useEventListener, useResizeObserver } from '@vueuse/core';\nimport '../../../../hooks/index.mjs';\nimport { useSize } from '../../../../hooks/use-common-props/index.mjs';\n\nfunction useStyle(props, layout, store, table) {\n  const isHidden = ref(false);\n  const renderExpanded = ref(null);\n  const resizeProxyVisible = ref(false);\n\n  const setDragVisible = visible => {\n    resizeProxyVisible.value = visible;\n  };\n\n  const resizeState = ref({\n    width: null,\n    height: null,\n    headerHeight: null\n  });\n  const isGroup = ref(false);\n  const scrollbarViewStyle = {\n    display: \"inline-block\",\n    verticalAlign: \"middle\"\n  };\n  const tableWidth = ref();\n  const tableScrollHeight = ref(0);\n  const bodyScrollHeight = ref(0);\n  const headerScrollHeight = ref(0);\n  watchEffect(() => {\n    layout.setHeight(props.height);\n  });\n  watchEffect(() => {\n    layout.setMaxHeight(props.maxHeight);\n  });\n  watch(() => [props.currentRowKey, store.states.rowKey], ([currentRowKey, rowKey]) => {\n    if (!unref(rowKey)) return;\n    store.setCurrentRowKey(`${currentRowKey}`);\n  }, {\n    immediate: true\n  });\n  watch(() => props.data, data => {\n    table.store.commit(\"setData\", data);\n  }, {\n    immediate: true,\n    deep: true\n  });\n  watchEffect(() => {\n    if (props.expandRowKeys) {\n      store.setExpandRowKeysAdapter(props.expandRowKeys);\n    }\n  });\n\n  const handleMouseLeave = () => {\n    table.store.commit(\"setHoverRow\", null);\n    if (table.hoverState) table.hoverState = null;\n  };\n\n  const handleHeaderFooterMousewheel = (event, data) => {\n    const {\n      pixelX,\n      pixelY\n    } = data;\n\n    if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5;\n    }\n  };\n\n  const shouldUpdateHeight = computed(() => {\n    return props.height || props.maxHeight || store.states.fixedColumns.value.length > 0 || store.states.rightFixedColumns.value.length > 0;\n  });\n  const tableBodyStyles = computed(() => {\n    return {\n      width: layout.bodyWidth.value ? `${layout.bodyWidth.value}px` : \"\"\n    };\n  });\n\n  const doLayout = () => {\n    if (shouldUpdateHeight.value) {\n      layout.updateElsHeight();\n    }\n\n    layout.updateColumnsWidth();\n    requestAnimationFrame(syncPostion);\n  };\n\n  onMounted(async () => {\n    await nextTick();\n    store.updateColumns();\n    bindEvents();\n    requestAnimationFrame(doLayout);\n    const el = table.vnode.el;\n    const tableHeader = table.refs.headerWrapper;\n\n    if (props.flexible && el && el.parentElement) {\n      el.parentElement.style.minWidth = \"0\";\n    }\n\n    resizeState.value = {\n      width: tableWidth.value = el.offsetWidth,\n      height: el.offsetHeight,\n      headerHeight: props.showHeader && tableHeader ? tableHeader.offsetHeight : null\n    };\n    store.states.columns.value.forEach(column => {\n      if (column.filteredValue && column.filteredValue.length) {\n        table.store.commit(\"filterChange\", {\n          column,\n          values: column.filteredValue,\n          silent: true\n        });\n      }\n    });\n    table.$ready = true;\n  });\n\n  const setScrollClassByEl = (el, className) => {\n    if (!el) return;\n    const classList = Array.from(el.classList).filter(item => !item.startsWith(\"is-scrolling-\"));\n    classList.push(layout.scrollX.value ? className : \"is-scrolling-none\");\n    el.className = classList.join(\" \");\n  };\n\n  const setScrollClass = className => {\n    const {\n      tableWrapper\n    } = table.refs;\n    setScrollClassByEl(tableWrapper, className);\n  };\n\n  const hasScrollClass = className => {\n    const {\n      tableWrapper\n    } = table.refs;\n    return !!(tableWrapper && tableWrapper.classList.contains(className));\n  };\n\n  const syncPostion = function () {\n    if (!table.refs.scrollBarRef) return;\n\n    if (!layout.scrollX.value) {\n      const scrollingNoneClass = \"is-scrolling-none\";\n\n      if (!hasScrollClass(scrollingNoneClass)) {\n        setScrollClass(scrollingNoneClass);\n      }\n\n      return;\n    }\n\n    const scrollContainer = table.refs.scrollBarRef.wrap$;\n    if (!scrollContainer) return;\n    const {\n      scrollLeft,\n      offsetWidth,\n      scrollWidth\n    } = scrollContainer;\n    const {\n      headerWrapper,\n      footerWrapper\n    } = table.refs;\n    if (headerWrapper) headerWrapper.scrollLeft = scrollLeft;\n    if (footerWrapper) footerWrapper.scrollLeft = scrollLeft;\n    const maxScrollLeftPosition = scrollWidth - offsetWidth - 1;\n\n    if (scrollLeft >= maxScrollLeftPosition) {\n      setScrollClass(\"is-scrolling-right\");\n    } else if (scrollLeft === 0) {\n      setScrollClass(\"is-scrolling-left\");\n    } else {\n      setScrollClass(\"is-scrolling-middle\");\n    }\n  };\n\n  const bindEvents = () => {\n    if (!table.refs.scrollBarRef) return;\n\n    if (table.refs.scrollBarRef.wrap$) {\n      useEventListener(table.refs.scrollBarRef.wrap$, \"scroll\", syncPostion, {\n        passive: true\n      });\n    }\n\n    if (props.fit) {\n      useResizeObserver(table.vnode.el, resizeListener);\n    } else {\n      useEventListener(window, \"resize\", resizeListener);\n    }\n  };\n\n  const resizeListener = () => {\n    var _a;\n\n    if (!table.$ready) return;\n    let shouldUpdateLayout = false;\n    const el = table.vnode.el;\n    const {\n      width: oldWidth,\n      height: oldHeight,\n      headerHeight: oldHeaderHeight\n    } = resizeState.value;\n    const width = tableWidth.value = el.offsetWidth;\n\n    if (oldWidth !== width) {\n      shouldUpdateLayout = true;\n    }\n\n    const height = el.offsetHeight;\n\n    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height) {\n      shouldUpdateLayout = true;\n    }\n\n    const tableHeader = table.refs.headerWrapper;\n\n    if (props.showHeader && tableHeader.offsetHeight !== oldHeaderHeight) {\n      shouldUpdateLayout = true;\n    }\n\n    tableScrollHeight.value = table.refs.tableWrapper.scrollHeight;\n    headerScrollHeight.value = ((_a = table.refs.headerWrapper) == null ? void 0 : _a.scrollHeight) || 0;\n    bodyScrollHeight.value = tableScrollHeight.value - headerScrollHeight.value;\n\n    if (shouldUpdateLayout) {\n      resizeState.value = {\n        width,\n        height,\n        headerHeight: props.showHeader ? tableHeader.offsetHeight : null\n      };\n      doLayout();\n    }\n  };\n\n  const tableSize = useSize();\n  const bodyWidth = computed(() => {\n    const {\n      bodyWidth: bodyWidth_,\n      scrollY,\n      gutterWidth\n    } = layout;\n    return bodyWidth_.value ? `${bodyWidth_.value - (scrollY.value ? gutterWidth : 0)}px` : \"\";\n  });\n  const tableLayout = computed(() => {\n    if (props.maxHeight) return \"fixed\";\n    return props.tableLayout;\n  });\n  const emptyBlockStyle = computed(() => {\n    if (props.data && props.data.length) return null;\n    let height = \"100%\";\n\n    if (bodyScrollHeight.value) {\n      height = `${bodyScrollHeight.value}px`;\n    }\n\n    const width = tableWidth.value;\n    return {\n      width: width ? `${width}px` : \"\",\n      height\n    };\n  });\n  const tableInnerStyle = computed(() => {\n    if (props.height) {\n      return {\n        height: !Number.isNaN(Number(props.height)) ? `${props.height}px` : props.height\n      };\n    }\n\n    if (props.maxHeight) {\n      return {\n        maxHeight: !Number.isNaN(Number(props.maxHeight)) ? `${props.maxHeight}px` : props.maxHeight\n      };\n    }\n\n    return {};\n  });\n  const scrollbarStyle = computed(() => {\n    var _a;\n\n    if (props.height) {\n      return {\n        height: \"100%\"\n      };\n    }\n\n    if (props.maxHeight) {\n      if (!Number.isNaN(Number(props.maxHeight))) {\n        const headerHeight = ((_a = table.refs.headerWrapper) == null ? void 0 : _a.scrollHeight) || 0;\n        const maxHeight = props.maxHeight;\n        const reachMaxHeight = tableScrollHeight.value >= Number(maxHeight);\n\n        if (reachMaxHeight) {\n          return {\n            maxHeight: `${tableScrollHeight.value - headerHeight}px`\n          };\n        }\n      } else {\n        return {\n          maxHeight: `calc(${props.maxHeight} - ${headerScrollHeight.value}px)`\n        };\n      }\n    }\n\n    return {};\n  });\n\n  const handleFixedMousewheel = (event, data) => {\n    const bodyWrapper = table.refs.bodyWrapper;\n\n    if (Math.abs(data.spinY) > 0) {\n      const currentScrollTop = bodyWrapper.scrollTop;\n\n      if (data.pixelY < 0 && currentScrollTop !== 0) {\n        event.preventDefault();\n      }\n\n      if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {\n        event.preventDefault();\n      }\n\n      bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);\n    } else {\n      bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);\n    }\n  };\n\n  return {\n    isHidden,\n    renderExpanded,\n    setDragVisible,\n    isGroup,\n    handleMouseLeave,\n    handleHeaderFooterMousewheel,\n    tableSize,\n    emptyBlockStyle,\n    handleFixedMousewheel,\n    resizeProxyVisible,\n    bodyWidth,\n    resizeState,\n    doLayout,\n    tableBodyStyles,\n    tableLayout,\n    scrollbarViewStyle,\n    tableInnerStyle,\n    scrollbarStyle\n  };\n}\n\nexport { useStyle as default };","map":{"version":3,"mappings":"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","names":["useStyle","props","layout","store","table","isHidden","ref","renderExpanded","resizeProxyVisible","setDragVisible","visible","value","resizeState","width","height","headerHeight","isGroup","scrollbarViewStyle","display","verticalAlign","tableWidth","tableScrollHeight","bodyScrollHeight","headerScrollHeight","watchEffect","setHeight","setMaxHeight","maxHeight","watch","currentRowKey","states","rowKey","unref","setCurrentRowKey","immediate","data","commit","deep","expandRowKeys","setExpandRowKeysAdapter","handleMouseLeave","hoverState","handleHeaderFooterMousewheel","event","pixelX","pixelY","Math","abs","refs","bodyWrapper","scrollLeft","shouldUpdateHeight","computed","fixedColumns","length","rightFixedColumns","tableBodyStyles","bodyWidth","doLayout","updateElsHeight","updateColumnsWidth","requestAnimationFrame","syncPostion","onMounted","nextTick","updateColumns","bindEvents","el","vnode","tableHeader","headerWrapper","flexible","parentElement","style","minWidth","offsetWidth","offsetHeight","showHeader","columns","forEach","column","filteredValue","values","silent","$ready","setScrollClassByEl","className","classList","Array","from","filter","item","startsWith","push","scrollX","join","setScrollClass","tableWrapper","hasScrollClass","contains","scrollBarRef","scrollingNoneClass","scrollContainer","wrap$","scrollWidth","footerWrapper","maxScrollLeftPosition","useEventListener","passive","fit","useResizeObserver","resizeListener","window","_a","shouldUpdateLayout","oldWidth","oldHeight","oldHeaderHeight","scrollHeight","tableSize","useSize","bodyWidth_","scrollY","gutterWidth","tableLayout","emptyBlockStyle","tableInnerStyle","Number","isNaN","scrollbarStyle","reachMaxHeight","handleFixedMousewheel","spinY","currentScrollTop","scrollTop","preventDefault","clientHeight","ceil"],"sources":["../../../../../../../packages/components/table/src/table/style-helper.ts"],"sourcesContent":["// @ts-nocheck\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  ref,\n  unref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport { useEventListener, useResizeObserver } from '@vueuse/core'\nimport { useSize } from '@element-plus/hooks'\n\nimport type { Table, TableProps } from './defaults'\nimport type { Store } from '../store'\nimport type TableLayout from '../table-layout'\nimport type { TableColumnCtx } from '../table-column/defaults'\n\nfunction useStyle<T>(\n  props: TableProps<T>,\n  layout: TableLayout<T>,\n  store: Store<T>,\n  table: Table<T>\n) {\n  const isHidden = ref(false)\n  const renderExpanded = ref(null)\n  const resizeProxyVisible = ref(false)\n  const setDragVisible = (visible: boolean) => {\n    resizeProxyVisible.value = visible\n  }\n  const resizeState = ref<{\n    width: null | number\n    height: null | number\n    headerHeight: null | number\n  }>({\n    width: null,\n    height: null,\n    headerHeight: null,\n  })\n  const isGroup = ref(false)\n  const scrollbarViewStyle = {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n  }\n  const tableWidth = ref()\n  const tableScrollHeight = ref(0)\n  const bodyScrollHeight = ref(0)\n  const headerScrollHeight = ref(0)\n\n  watchEffect(() => {\n    layout.setHeight(props.height)\n  })\n  watchEffect(() => {\n    layout.setMaxHeight(props.maxHeight)\n  })\n  watch(\n    () => [props.currentRowKey, store.states.rowKey],\n    ([currentRowKey, rowKey]) => {\n      if (!unref(rowKey)) return\n      store.setCurrentRowKey(`${currentRowKey}`)\n    },\n    {\n      immediate: true,\n    }\n  )\n  watch(\n    () => props.data,\n    (data) => {\n      table.store.commit('setData', data)\n    },\n    {\n      immediate: true,\n      deep: true,\n    }\n  )\n  watchEffect(() => {\n    if (props.expandRowKeys) {\n      store.setExpandRowKeysAdapter(props.expandRowKeys)\n    }\n  })\n\n  const handleMouseLeave = () => {\n    table.store.commit('setHoverRow', null)\n    if (table.hoverState) table.hoverState = null\n  }\n\n  const handleHeaderFooterMousewheel = (event, data) => {\n    const { pixelX, pixelY } = data\n    if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5\n    }\n  }\n\n  const shouldUpdateHeight = computed(() => {\n    return (\n      props.height ||\n      props.maxHeight ||\n      store.states.fixedColumns.value.length > 0 ||\n      store.states.rightFixedColumns.value.length > 0\n    )\n  })\n\n  const tableBodyStyles = computed(() => {\n    return {\n      width: layout.bodyWidth.value ? `${layout.bodyWidth.value}px` : '',\n    }\n  })\n\n  const doLayout = () => {\n    if (shouldUpdateHeight.value) {\n      layout.updateElsHeight()\n    }\n    layout.updateColumnsWidth()\n    requestAnimationFrame(syncPostion)\n  }\n  onMounted(async () => {\n    await nextTick()\n    store.updateColumns()\n    bindEvents()\n    requestAnimationFrame(doLayout)\n\n    const el: HTMLElement = table.vnode.el as HTMLElement\n    const tableHeader: HTMLElement = table.refs.headerWrapper\n    if (props.flexible && el && el.parentElement) {\n      // Automatic minimum size of flex-items\n      // Ensure that the main axis does not follow the width of the items\n      el.parentElement.style.minWidth = '0'\n    }\n\n    resizeState.value = {\n      width: (tableWidth.value = el.offsetWidth),\n      height: el.offsetHeight,\n      headerHeight:\n        props.showHeader && tableHeader ? tableHeader.offsetHeight : null,\n    }\n\n    // init filters\n    store.states.columns.value.forEach((column: TableColumnCtx<T>) => {\n      if (column.filteredValue && column.filteredValue.length) {\n        table.store.commit('filterChange', {\n          column,\n          values: column.filteredValue,\n          silent: true,\n        })\n      }\n    })\n    table.$ready = true\n  })\n  const setScrollClassByEl = (el: HTMLElement, className: string) => {\n    if (!el) return\n    const classList = Array.from(el.classList).filter(\n      (item) => !item.startsWith('is-scrolling-')\n    )\n    classList.push(layout.scrollX.value ? className : 'is-scrolling-none')\n    el.className = classList.join(' ')\n  }\n  const setScrollClass = (className: string) => {\n    const { tableWrapper } = table.refs\n    setScrollClassByEl(tableWrapper, className)\n  }\n  const hasScrollClass = (className: string) => {\n    const { tableWrapper } = table.refs\n    return !!(tableWrapper && tableWrapper.classList.contains(className))\n  }\n  const syncPostion = function () {\n    if (!table.refs.scrollBarRef) return\n    if (!layout.scrollX.value) {\n      const scrollingNoneClass = 'is-scrolling-none'\n      if (!hasScrollClass(scrollingNoneClass)) {\n        setScrollClass(scrollingNoneClass)\n      }\n      return\n    }\n    const scrollContainer = table.refs.scrollBarRef.wrap$\n    if (!scrollContainer) return\n    const { scrollLeft, offsetWidth, scrollWidth } = scrollContainer\n    const { headerWrapper, footerWrapper } = table.refs\n    if (headerWrapper) headerWrapper.scrollLeft = scrollLeft\n    if (footerWrapper) footerWrapper.scrollLeft = scrollLeft\n    const maxScrollLeftPosition = scrollWidth - offsetWidth - 1\n    if (scrollLeft >= maxScrollLeftPosition) {\n      setScrollClass('is-scrolling-right')\n    } else if (scrollLeft === 0) {\n      setScrollClass('is-scrolling-left')\n    } else {\n      setScrollClass('is-scrolling-middle')\n    }\n  }\n\n  const bindEvents = () => {\n    if (!table.refs.scrollBarRef) return\n    if (table.refs.scrollBarRef.wrap$) {\n      useEventListener(table.refs.scrollBarRef.wrap$, 'scroll', syncPostion, {\n        passive: true,\n      })\n    }\n    if (props.fit) {\n      useResizeObserver(table.vnode.el as HTMLElement, resizeListener)\n    } else {\n      useEventListener(window, 'resize', resizeListener)\n    }\n  }\n  const resizeListener = () => {\n    if (!table.$ready) return\n    let shouldUpdateLayout = false\n    const el = table.vnode.el\n    const {\n      width: oldWidth,\n      height: oldHeight,\n      headerHeight: oldHeaderHeight,\n    } = resizeState.value\n\n    const width = (tableWidth.value = el.offsetWidth)\n    if (oldWidth !== width) {\n      shouldUpdateLayout = true\n    }\n\n    const height = el.offsetHeight\n    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height) {\n      shouldUpdateLayout = true\n    }\n\n    const tableHeader: HTMLElement = table.refs.headerWrapper\n    if (props.showHeader && tableHeader.offsetHeight !== oldHeaderHeight) {\n      shouldUpdateLayout = true\n    }\n\n    tableScrollHeight.value = table.refs.tableWrapper.scrollHeight\n    headerScrollHeight.value = table.refs.headerWrapper?.scrollHeight || 0\n    bodyScrollHeight.value = tableScrollHeight.value - headerScrollHeight.value\n\n    if (shouldUpdateLayout) {\n      resizeState.value = {\n        width,\n        height,\n        headerHeight: props.showHeader ? tableHeader.offsetHeight : null,\n      }\n      doLayout()\n    }\n  }\n  const tableSize = useSize()\n  const bodyWidth = computed(() => {\n    const { bodyWidth: bodyWidth_, scrollY, gutterWidth } = layout\n    return bodyWidth_.value\n      ? `${(bodyWidth_.value as number) - (scrollY.value ? gutterWidth : 0)}px`\n      : ''\n  })\n\n  const tableLayout = computed(() => {\n    if (props.maxHeight) return 'fixed'\n    return props.tableLayout\n  })\n\n  const emptyBlockStyle = computed(() => {\n    if (props.data && props.data.length) return null\n    let height = '100%'\n    if (bodyScrollHeight.value) {\n      height = `${bodyScrollHeight.value}px`\n    }\n    const width = tableWidth.value\n    return {\n      width: width ? `${width}px` : '',\n      height,\n    }\n  })\n\n  const tableInnerStyle = computed(() => {\n    if (props.height) {\n      return {\n        height: !Number.isNaN(Number(props.height))\n          ? `${props.height}px`\n          : props.height,\n      }\n    }\n    if (props.maxHeight) {\n      return {\n        maxHeight: !Number.isNaN(Number(props.maxHeight))\n          ? `${props.maxHeight}px`\n          : props.maxHeight,\n      }\n    }\n    return {}\n  })\n\n  const scrollbarStyle = computed(() => {\n    if (props.height) {\n      return {\n        height: '100%',\n      }\n    }\n    if (props.maxHeight) {\n      if (!Number.isNaN(Number(props.maxHeight))) {\n        const headerHeight = table.refs.headerWrapper?.scrollHeight || 0\n        const maxHeight = props.maxHeight\n        const reachMaxHeight = tableScrollHeight.value >= Number(maxHeight)\n        if (reachMaxHeight) {\n          return {\n            maxHeight: `${tableScrollHeight.value - headerHeight}px`,\n          }\n        }\n      } else {\n        return {\n          maxHeight: `calc(${props.maxHeight} - ${headerScrollHeight.value}px)`,\n        }\n      }\n    }\n\n    return {}\n  })\n\n  /**\n   * fix layout\n   */\n  const handleFixedMousewheel = (event, data) => {\n    const bodyWrapper = table.refs.bodyWrapper\n    if (Math.abs(data.spinY) > 0) {\n      const currentScrollTop = bodyWrapper.scrollTop\n      if (data.pixelY < 0 && currentScrollTop !== 0) {\n        event.preventDefault()\n      }\n      if (\n        data.pixelY > 0 &&\n        bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop\n      ) {\n        event.preventDefault()\n      }\n      bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5)\n    } else {\n      bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5)\n    }\n  }\n\n  return {\n    isHidden,\n    renderExpanded,\n    setDragVisible,\n    isGroup,\n    handleMouseLeave,\n    handleHeaderFooterMousewheel,\n    tableSize,\n    emptyBlockStyle,\n    handleFixedMousewheel,\n    resizeProxyVisible,\n    bodyWidth,\n    resizeState,\n    doLayout,\n    tableBodyStyles,\n    tableLayout,\n    scrollbarViewStyle,\n    tableInnerStyle,\n    scrollbarStyle,\n  }\n}\n\nexport default useStyle\n"]},"metadata":{},"sourceType":"module"}