{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nimport HomeView from '../views/home/HomeView';\nimport LoginView from '../views/login/LoginView';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: HomeView\n}, {\n  path: '/login',\n  name: 'LoginView',\n  component: LoginView\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n}); // 路由守卫实现基础登陆校验功能\n// beforeEach表示在初始化时候被调用和每次路由切换之前别调用\n\nrouter.beforeEach((to, from, next) => {\n  console.log(to.name); // isLogin在本地存储中\n\n  const isLogin = localStorage.isLogin; //to：进入到哪个路由去\n  //from：从哪个路由离开\n  //next：路由的控制参数，常用的有next(true)和next(false)\n  // 如果已经登录或者要访问的页面是Login页面，则可以执行\n\n  if (isLogin || to.name === \"login\") {\n    next(); // 用户没有登录的时候，无法访问其它页面，只能跳到Login页面\n  } else {\n    next({\n      name: 'login'\n    });\n  }\n\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","HomeView","LoginView","routes","path","name","component","router","history","beforeEach","to","from","next","console","log","isLogin","localStorage"],"sources":["D:/StudySoft/VSCode/VSCodeFile/CODE_前端projects/fangjingdong-mall_project/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\r\nimport HomeView from '../views/home/HomeView';\r\nimport LoginView from '../views/login/LoginView';\r\n\r\nconst routes = [\r\n  {\r\n    path:'/',\r\n    name:'Home',\r\n    component: HomeView\r\n  },\r\n  {\r\n    path:'/login',\r\n    name:'LoginView',\r\n    component:LoginView\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory(),\r\n  routes\r\n})\r\n\r\n// 路由守卫实现基础登陆校验功能\r\n// beforeEach表示在初始化时候被调用和每次路由切换之前别调用\r\nrouter.beforeEach((to,from,next)=>{\r\n  console.log(to.name)\r\n  // isLogin在本地存储中\r\n  const isLogin = localStorage.isLogin;\r\n\r\n  //to：进入到哪个路由去\r\n  //from：从哪个路由离开\r\n  //next：路由的控制参数，常用的有next(true)和next(false)\r\n\r\n  // 如果已经登录或者要访问的页面是Login页面，则可以执行\r\n  if(isLogin || to.name === \"login\"){\r\n    next();\r\n  // 用户没有登录的时候，无法访问其它页面，只能跳到Login页面\r\n  }else{\r\n    next({name:'login'})\r\n  }\r\n  next()\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,oBAAvB,QAAmD,YAAnD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAC,GADP;EAEEC,IAAI,EAAC,MAFP;EAGEC,SAAS,EAAEL;AAHb,CADa,EAMb;EACEG,IAAI,EAAC,QADP;EAEEC,IAAI,EAAC,WAFP;EAGEC,SAAS,EAACJ;AAHZ,CANa,CAAf;AAaA,MAAMK,MAAM,GAAGR,YAAY,CAAC;EAC1BS,OAAO,EAAER,oBAAoB,EADH;EAE1BG;AAF0B,CAAD,CAA3B,C,CAKA;AACA;;AACAI,MAAM,CAACE,UAAP,CAAkB,CAACC,EAAD,EAAIC,IAAJ,EAASC,IAAT,KAAgB;EAChCC,OAAO,CAACC,GAAR,CAAYJ,EAAE,CAACL,IAAf,EADgC,CAEhC;;EACA,MAAMU,OAAO,GAAGC,YAAY,CAACD,OAA7B,CAHgC,CAKhC;EACA;EACA;EAEA;;EACA,IAAGA,OAAO,IAAIL,EAAE,CAACL,IAAH,KAAY,OAA1B,EAAkC;IAChCO,IAAI,GAD4B,CAElC;EACC,CAHD,MAGK;IACHA,IAAI,CAAC;MAACP,IAAI,EAAC;IAAN,CAAD,CAAJ;EACD;;EACDO,IAAI;AACL,CAjBD;AAmBA,eAAeL,MAAf"},"metadata":{},"sourceType":"module"}