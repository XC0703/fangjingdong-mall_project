{"ast":null,"code":"import { useCommonCartEffect } from '../../effects/cartEffects';\nimport { useRoute, useRouter } from 'vue-router';\nimport { post } from '../../utils/request';\nimport { useStore } from 'vuex';\nimport { ref } from 'vue'; // 蒙层展示相关的逻辑\n\nconst useShowMaskEffect = () => {\n  const showConfirm = ref(false);\n\n  const handleShowConfirmChange = status => {\n    showConfirm.value = status;\n  };\n\n  return {\n    showConfirm,\n    handleShowConfirmChange\n  };\n};\n\nconst useShowHavePayedEffect = () => {\n  const showHavaPayed = ref(false);\n\n  const handleHavaPayed = (status, handleShowConfirmChange, handleConfirmOrder) => {\n    showHavaPayed.value = status;\n\n    if (status == true) {\n      handleShowConfirmChange(false);\n      setTimeout(\"handleConfirmOrder(\" + false + \")\", 5000);\n    } else {\n      handleConfirmOrder(false);\n    }\n  };\n\n  return {\n    showHavaPayed,\n    handleHavaPayed\n  };\n}; // 确认订单按钮的响应逻辑\n\n\nconst useMakeOrderEffect = (productList, shopId, shopName) => {\n  const router = useRouter();\n  const store = useStore();\n\n  const handleConfirmOrder = async isCanceled => {\n    // 将从store获取到的数据转化为接口需要的格式\n    // 因为是对象，只能循环赋值\n    const products = [];\n\n    for (let i in productList.value) {\n      const product = productList.value[i];\n      products.push({\n        id: parseInt(product._id, 10),\n        num: product.count\n      });\n    } // 可以使用try/catch监听Promise 返回状态，try为成功，catch失败\n\n\n    try {\n      // 每遇到一个await都会先返回,再往下执行,变成了同步操作\n      // 传入参数发送请求\n      const result = await post('/api/order', {\n        addressId: 1,\n        shopId,\n        shopName: shopName.value,\n        isCanceled,\n        products\n      }); // result?.data?.errno的意思是尝试获取result中的data中的error属性，它和result.data.errno的意思是一样的，但是比result.data.errno的容错性更高。\n      // 代码会尝试查找errno，如果查找不到，会返回undefined，而不会报错\n\n      if (result?.errno === 0) {\n        store.commit('cleanCartProducts', {\n          shopId\n        });\n        router.push({\n          name: 'OrderList'\n        });\n      }\n    } catch (e) {\n      // 提示下单失败\n      alert('下单失败');\n    }\n  };\n\n  return {\n    handleConfirmOrder\n  };\n};\n\nexport default {\n  name: 'OrderFooter',\n\n  setup() {\n    const route = useRoute(); // 转成数字\n\n    const shopId = parseInt(route.params.id, 10);\n    const {\n      calculations,\n      shopName,\n      productList\n    } = useCommonCartEffect(shopId); // 蒙层弹出确认窗口\n\n    const {\n      showConfirm,\n      handleShowConfirmChange\n    } = useShowMaskEffect();\n    const {\n      showHavaPayed,\n      handleHavaPayed\n    } = useShowHavePayedEffect(); // 下单\n\n    const {\n      handleConfirmOrder\n    } = useMakeOrderEffect(productList, shopId, shopName);\n    return {\n      calculations,\n      shopName,\n      productList,\n      showConfirm,\n      handleShowConfirmChange,\n      showHavaPayed,\n      handleHavaPayed,\n      handleConfirmOrder\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["useCommonCartEffect","useRoute","useRouter","post","useStore","ref","useShowMaskEffect","showConfirm","handleShowConfirmChange","status","value","useShowHavePayedEffect","showHavaPayed","handleHavaPayed","handleConfirmOrder","setTimeout","useMakeOrderEffect","productList","shopId","shopName","router","store","isCanceled","products","i","product","push","id","parseInt","_id","num","count","result","addressId","errno","commit","name","e","alert","setup","route","params","calculations"],"sourceRoot":"","sources":["D:\\StudySoft\\VSCode\\VSCodeFile\\CODE_前端projects\\fangjingdong-mall_project\\src\\views\\orderConfirm\\OrderFooter.vue"],"sourcesContent":["<template>\r\n    <div class=\"order\">\r\n        <div class=\"order__price\">实付金额￥<b>{{calculations.price}}</b></div>\r\n        <div \r\n            class=\"order__btn\"\r\n            @click=\"() => handleShowConfirmChange(true)\"\r\n        >提交订单</div>\r\n    </div>\r\n    <div\r\n        class=\"mask\"\r\n        v-show=\"showConfirm\"\r\n        @click=\"() => handleShowConfirmChange(false)\"\r\n    >\r\n    <!-- mask__content点击事件无效 -->\r\n        <div class=\"mask__content\" @click.stop>\r\n            <h3 class=\"mask__content__title\">确认要离开收银台？</h3>\r\n            <p class=\"mask__content__desc\">请尽快完成支付，否则将被取消</p>\r\n            <div class=\"mask__content__btns\">\r\n                <div\r\n                    class=\"mask__content__btn mask__content__btn--first\"\r\n                    @click=\"() => handleConfirmOrder(true)\"\r\n                    >取消订单</div>\r\n                <div\r\n                    class=\"mask__content__btn mask__content__btn--last\"\r\n                    @click=\"() => handleHavaPayed(true,handleShowConfirmChange,handleConfirmOrder)\"\r\n                >确认支付</div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div\r\n        class=\"mask\"\r\n        v-show=\"showHavaPayed\"\r\n    >\r\n    <!-- mask__content点击事件无效 -->\r\n        <div class=\"mask__content\" @click.stop>\r\n          <div \r\n            class=\"mask__content__cancelIcon iconfont\"\r\n            @click=\"() => handleHavaPayed(false,handleShowConfirmChange,handleConfirmOrder)\"\r\n          >&#xe628;</div>\r\n          <div class=\"mask__content__succeedIcon iconfont\">&#xe609;</div>\r\n          <h3 class=\"mask__content__word\">支付成功，等待配送</h3>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { useCommonCartEffect } from '../../effects/cartEffects'\r\nimport { useRoute,useRouter } from 'vue-router';\r\nimport {post} from '../../utils/request';\r\nimport { useStore } from 'vuex';\r\nimport { ref } from 'vue';\r\n\r\n\r\n// 蒙层展示相关的逻辑\r\nconst useShowMaskEffect = () => {\r\n  const showConfirm = ref(false)\r\n  const handleShowConfirmChange = (status) => {\r\n    showConfirm.value = status\r\n  }\r\n  return { showConfirm, handleShowConfirmChange }\r\n}\r\nconst useShowHavePayedEffect = () => {\r\n  const showHavaPayed = ref(false)\r\n  const handleHavaPayed = (status,handleShowConfirmChange,handleConfirmOrder) => {\r\n    showHavaPayed.value = status\r\n    if(status==true){\r\n      handleShowConfirmChange(false)\r\n      setTimeout(\"handleConfirmOrder(\"+false+\")\"\r\n    , 5000 )\r\n    }else{\r\n      handleConfirmOrder(false)\r\n    }\r\n  }\r\n  return { showHavaPayed, handleHavaPayed }\r\n}\r\n// 确认订单按钮的响应逻辑\r\nconst useMakeOrderEffect = (productList,shopId,shopName)=>{\r\n    const router = useRouter()\r\n    const store = useStore()\r\n\r\n    const handleConfirmOrder = async(isCanceled)=>{\r\n        // 将从store获取到的数据转化为接口需要的格式\r\n        // 因为是对象，只能循环赋值\r\n        const products = [];\r\n        for(let i in productList.value){\r\n            const product = productList.value[i]\r\n            products.push({\r\n                id:parseInt(product._id,10),\r\n                num:product.count\r\n            })\r\n        }       \r\n        // 可以使用try/catch监听Promise 返回状态，try为成功，catch失败\r\n        try{\r\n            // 每遇到一个await都会先返回,再往下执行,变成了同步操作\r\n            // 传入参数发送请求\r\n            const result = await post('/api/order',{\r\n                addressId:1,\r\n                shopId,\r\n                shopName:shopName.value,\r\n                isCanceled,\r\n                products,\r\n            })\r\n            // result?.data?.errno的意思是尝试获取result中的data中的error属性，它和result.data.errno的意思是一样的，但是比result.data.errno的容错性更高。\r\n            // 代码会尝试查找errno，如果查找不到，会返回undefined，而不会报错\r\n            if(result?.errno===0){\r\n                store.commit('cleanCartProducts', { shopId })\r\n                router.push({name:'OrderList'})\r\n            }\r\n            }catch(e){\r\n                // 提示下单失败\r\n                alert('下单失败')\r\n            }\r\n    }\r\n    return {handleConfirmOrder}\r\n}\r\nexport default ({\r\n    name:'OrderFooter',\r\n    setup() {\r\n        const route = useRoute()\r\n\r\n        // 转成数字\r\n        const shopId = parseInt(route.params.id,10)\r\n        const { calculations,shopName,productList } = useCommonCartEffect(shopId)\r\n\r\n        // 蒙层弹出确认窗口\r\n        const { showConfirm, handleShowConfirmChange } = useShowMaskEffect(); \r\n        const { showHavaPayed, handleHavaPayed } = useShowHavePayedEffect();\r\n\r\n        // 下单\r\n        const { handleConfirmOrder } = useMakeOrderEffect(productList,shopId,shopName)\r\n\r\n        return { \r\n            calculations,shopName,productList,\r\n            showConfirm, handleShowConfirmChange,\r\n            showHavaPayed, handleHavaPayed,\r\n            handleConfirmOrder }\r\n    },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../../style/viriables.scss';\r\n.order{\r\n    display: flex;\r\n    height: .49rem;\r\n    line-height: .49rem;\r\n    background-color: $bgColor;\r\n    position: absolute;\r\n    bottom:0;\r\n    left:0;\r\n    right: 0;\r\n    &__price{\r\n        flex:1;\r\n        text-indent: .24rem;\r\n        font-size: .14rem;\r\n        color:$content-fontcolor;\r\n    }\r\n    &__btn{\r\n        width: .98rem;\r\n        background: #4FB0F9;\r\n        color:#fff;\r\n        text-align: center;\r\n        font-size: .14rem;\r\n    }\r\n}\r\n.mask {\r\n  z-index: 1;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  background: rgba(0, 0, 0, .5);\r\n  &__content {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 3rem;\r\n    height: 1.56rem;\r\n    background: $bgColor;\r\n    text-align: center;\r\n    border-radius: .04rem;\r\n    &__title {\r\n      margin: .24rem 0 0 0;\r\n      line-height: .26rem;\r\n      font-size: .18rem;\r\n      color: $content-fontcolor;\r\n    }\r\n    &__desc {\r\n      margin: .08rem 0 0 0;\r\n      font-size: .14rem;\r\n      color: $medium-fontColor;\r\n    }\r\n    &__btns {\r\n      display: flex;\r\n      margin: .24rem .58rem;\r\n    }\r\n    &__btn {\r\n      flex: 1;\r\n      width: .8rem;\r\n      line-height: .32rem;\r\n      border-radius: .16rem;\r\n      font-size: .14rem;\r\n      &--first {\r\n        margin-right: .12rem;\r\n        border: .01rem solid $btn-bgcolor;\r\n        color: $btn-bgcolor;\r\n      }\r\n      &--last {\r\n        margin-left: .12rem;\r\n        background: $btn-bgcolor;\r\n        color: #fff;\r\n      }\r\n    }\r\n    &__cancelIcon{\r\n      height: .24rem;\r\n      width: .24rem;\r\n      position: absolute;\r\n      top:.05rem;\r\n      right:.07rem;\r\n      font-size: .24rem;\r\n      color:$medium-fontColor; \r\n    }\r\n    &__succeedIcon{\r\n      height: .33rem;\r\n      width: .44rem;\r\n      text-align: center;\r\n      position: absolute;\r\n      transform: translate(-50%);\r\n      left:50%;\r\n      top:.25rem;\r\n      font-size: .64rem;\r\n      color:$medium-fontColor;    \r\n    }\r\n    &__word{\r\n      height: .25rem;\r\n      width: 1.62rem;\r\n      text-align: center;\r\n      position: absolute;\r\n      transform: translate(-50%);\r\n      left:50%;\r\n      bottom:.1rem;\r\n      font-size: .18rem;\r\n      color:$content-fontcolor;     \r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}