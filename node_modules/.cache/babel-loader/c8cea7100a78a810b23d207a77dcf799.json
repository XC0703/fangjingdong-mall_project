{"ast":null,"code":"import { reactive, toRefs, ref, watchEffect } from 'vue';\nimport { get } from '../../utils/request';\nimport { useRoute } from 'vue-router';\nimport { createStore } from 'vuex';\nconst categories = [{\n  name: '全部商品',\n  tab: 'all'\n}, {\n  name: '秒杀',\n  tab: 'seckill'\n}, {\n  name: '新鲜水果',\n  tab: 'fruit'\n}]; // Tab 切换相关的逻辑\n\nconst useTabEffect = () => {\n  const currentTab = ref(categories[0].tab);\n\n  const handleTabClick = tab => {\n    currentTab.value = tab;\n  };\n\n  return {\n    currentTab,\n    handleTabClick\n  };\n}; // 列表内容相关的逻辑\n\n\nconst useCurrentListEffect = currentTab => {\n  const route = useRoute();\n  const shopId = route.params.id;\n  const content = reactive({\n    list: []\n  });\n\n  const getContentData = async () => {\n    const result = await get(`/api/shop/${shopId}/products`, {\n      tab: currentTab.value\n    });\n\n    if (result?.errno === 0 && result?.data?.length) {\n      content.list = result.data;\n    }\n  }; // 在 watchEffect 中会立即执行传入一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数\n\n\n  watchEffect(() => {\n    getContentData();\n  });\n  const {\n    list\n  } = toRefs(content);\n  return {\n    list,\n    shopId\n  };\n}; // 购物车数据获取相关的逻辑\n\n\nconst useCartEffect = () => {\n  // store存储\n  const store = createStore({\n    state: {\n      cartList: {\n        // 第一层级是商铺的 id\n        1: {\n          // 第二层是商品内容及购物数量\n          111: {\n            _id: '1',\n            name: '番茄250g/份',\n            imgUrl: 'http://www.dell-lee.com/imgs/vue3/tomato.png',\n            sales: 10,\n            price: 33.6,\n            oldPrice: 39.6,\n            count: 2\n          },\n          222: {}\n        },\n        2: {}\n      }\n    },\n    mutations: {\n      changeItemToCart(state, payload) {\n        const {\n          shopId,\n          productId,\n          productInfo,\n          num\n        } = payload;\n        let shopInfo = state.cartList[shopId];\n\n        if (!shopInfo) {\n          shopInfo = {};\n        }\n\n        let product = shopInfo[productId];\n\n        if (!product) {\n          product = productInfo;\n          product.count = 0;\n        }\n\n        product.count = product.count + num;\n\n        if (product.count < 0) {\n          product.count = 0;\n        }\n\n        shopInfo[productId] = product;\n        state.cartList[shopId] = shopInfo;\n      }\n\n    }\n  });\n  const cartList = store.state.cartList;\n\n  const changeItemToCart = (shopId, productId, productInfo, num) => {\n    // commit 的作用 就是调用 某个mutation函数\n    store.commit('changeItemToCart', {\n      shopId,\n      productId,\n      productInfo,\n      num\n    });\n  };\n\n  return {\n    cartList,\n    changeItemToCart\n  };\n};\n\nexport default {\n  name: 'ContentView',\n\n  setup() {\n    const {\n      currentTab,\n      handleTabClick\n    } = useTabEffect();\n    const {\n      list,\n      shopId\n    } = useCurrentListEffect(currentTab);\n    const {\n      cartList,\n      changeItemToCart\n    } = useCartEffect();\n    return {\n      categories,\n      currentTab,\n      handleTabClick,\n      shopId,\n      list,\n      cartList,\n      changeItemToCart\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["reactive","toRefs","ref","watchEffect","get","useRoute","createStore","categories","name","tab","useTabEffect","currentTab","handleTabClick","value","useCurrentListEffect","route","shopId","params","id","content","list","getContentData","result","errno","data","length","useCartEffect","store","state","cartList","_id","imgUrl","sales","price","oldPrice","count","mutations","changeItemToCart","payload","productId","productInfo","num","shopInfo","product","commit","setup"],"sourceRoot":"","sources":["D:\\StudySoft\\VSCode\\VSCodeFile\\CODE_前端projects\\fangjingdong-mall_project\\src\\views\\shop\\ContentView.vue"],"sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"category\">\r\n        <div \r\n          class=\"category__item\" \r\n          :class=\"{'category__item--active': currentTab===item.tab}\"\r\n          v-for=\"item in categories\"\r\n          :key=\"item.name\"\r\n          @click=\"()=>handleTabClick(item.tab)\"\r\n        >{{item.name}}</div>\r\n    </div>\r\n    <div class=\"product\">\r\n        <div \r\n          class=\"product__item\"\r\n          v-for=\"item in list\"\r\n          :key=\"item._id\"\r\n        >\r\n            <img class=\"product__item__img\" src=\"http://www.dell-lee.com/imgs/vue3/near.png\" />\r\n            <div class=\"product__item__detail\">\r\n              <h4 class=\"product__item__title\">{{item.name}}</h4>\r\n              <p class=\"product__item__sales\">月售 {{item.sales}} 件</p>\r\n              <p class=\"product__item__price\">\r\n                <span class=\"product__item__yen\">&yen;</span>{{item.price}}\r\n                <span class=\"product__item__origin\">&yen;{{item.oldPrice}}</span>\r\n              </p>\r\n            </div>\r\n            <div class=\"product__number\">\r\n              <span class=\"product__number__minus\" @click=\"()=>{changeItemToCart(shopId, item._id, item, -1)}\">-</span>\r\n              {{cartList?.[shopId]?.[item._id]?.count || 0}}\r\n              <span class=\"product__number__plus\" @click=\"()=>{changeItemToCart(shopId, item._id, item, 1)}\">+</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRefs, ref, watchEffect} from 'vue';\r\nimport { get } from '../../utils/request';\r\nimport {useRoute } from 'vue-router';\r\nimport { createStore } from 'vuex';\r\n\r\nconst categories = [{\r\n  name:'全部商品',\r\n  tab:'all'\r\n},{\r\n  name:'秒杀',\r\n  tab:'seckill'\r\n},{\r\n  name:'新鲜水果',\r\n  tab:'fruit'\r\n}]\r\n\r\n// Tab 切换相关的逻辑\r\nconst useTabEffect = () => {\r\n  const currentTab = ref(categories[0].tab)\r\n  const handleTabClick = (tab) => {\r\n    currentTab.value = tab\r\n  }\r\n  return { currentTab, handleTabClick}\r\n}\r\n\r\n// 列表内容相关的逻辑\r\nconst useCurrentListEffect = (currentTab) => {\r\n  const route = useRoute()\r\n  const shopId = route.params.id\r\n  const content = reactive({ list: [] })\r\n  \r\n  const getContentData = async () => {\r\n    const result = await get(`/api/shop/${shopId}/products`, {\r\n      tab: currentTab.value\r\n    })\r\n    if(result?.errno === 0 && result?.data?.length) {\r\n      content.list = result.data;\r\n    }\r\n  }\r\n  // 在 watchEffect 中会立即执行传入一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数\r\n  watchEffect(() => { getContentData() })\r\n\r\n  const { list } = toRefs(content)\r\n  return { list ,shopId }\r\n}\r\n\r\n\r\n\r\n// 购物车数据获取相关的逻辑\r\nconst useCartEffect = () => {\r\n  // store存储\r\n  const store = createStore({\r\n    state: {\r\n      cartList: {\r\n        // 第一层级是商铺的 id\r\n        1: {\r\n          // 第二层是商品内容及购物数量\r\n          111: {\r\n            _id: '1',\r\n            name: '番茄250g/份',\r\n            imgUrl: 'http://www.dell-lee.com/imgs/vue3/tomato.png',\r\n            sales: 10,\r\n            price: 33.6,\r\n            oldPrice: 39.6,\r\n            count: 2\r\n          },\r\n          222: {\r\n          \r\n          }\r\n        },\r\n        2: {\r\n        \r\n        }\r\n      }\r\n    },\r\n    mutations: {\r\n      changeItemToCart (state, payload) {\r\n            const { shopId, productId, productInfo, num } = payload\r\n            let shopInfo = state.cartList[shopId]\r\n            if (!shopInfo) {\r\n              shopInfo = {}\r\n            }\r\n            let product = shopInfo[productId]\r\n            if (!product) {\r\n              product = productInfo\r\n              product.count = 0\r\n            }\r\n            product.count = product.count + num\r\n            if (product.count < 0) { product.count = 0 }\r\n            shopInfo[productId] = product\r\n            state.cartList[shopId] = shopInfo\r\n      }\r\n    }\r\n  })\r\n  const cartList = store.state.cartList\r\n\r\n  const changeItemToCart = (shopId, productId, productInfo, num) => {\r\n    // commit 的作用 就是调用 某个mutation函数\r\n    store.commit('changeItemToCart', {\r\n      shopId, productId, productInfo, num\r\n    })\r\n  }\r\n  return { cartList, changeItemToCart }\r\n}\r\n\r\nexport default {\r\n  name: 'ContentView',\r\n  setup() {\r\n    const { currentTab, handleTabClick } = useTabEffect()\r\n    const { list,shopId } = useCurrentListEffect(currentTab)\r\n    const { cartList, changeItemToCart } = useCartEffect()\r\n\r\n    return { \r\n      categories, currentTab, handleTabClick, shopId,list,\r\n      cartList,changeItemToCart\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../../style/viriables.scss';\r\n@import '../../style/mixins.scss';\r\n.content {\r\n  display: flex;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 1.5rem;\r\n  bottom: .5rem;\r\n}\r\n.category {\r\n  overflow-y: scroll;\r\n  height: 100%;\r\n  width: .76rem;\r\n  background: $search-bgColor;\r\n  &__item {\r\n    line-height: .4rem;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    color: $content-fontcolor;\r\n    &--active {\r\n      background: $bgColor;\r\n    }\r\n  }\r\n}\r\n.product {\r\n  overflow-y: scroll;\r\n  flex: 1;\r\n  &__item {\r\n    position: relative;\r\n    display: flex;\r\n    padding: .12rem 0;\r\n    margin: 0 .16rem;\r\n    border-bottom: .01rem solid $content-bgcolor;\r\n    &__detail{\r\n      overflow: hidden;\r\n    }\r\n    &__img {\r\n      width: .68rem;\r\n      height: .68rem;\r\n      margin-right: .16rem;\r\n    }\r\n    &__title{\r\n      margin:0;\r\n      line-height:.2rem;\r\n      font-size: .14rem;\r\n      color:$content-fontcolor;\r\n      @include ellipsis;\r\n    }\r\n    &__sales{\r\n      margin:.06rem 0;\r\n      line-height: .16rem;\r\n      font-size: .12rem;\r\n      color:$content-fontcolor;\r\n    }\r\n    &__price{\r\n      margin:0;\r\n      line-height: .2rem;\r\n      font-size: .14rem;\r\n      color:$hightlight-fontColor ;\r\n    }\r\n    &__yen{\r\n      font-size: .12rem;\r\n    }\r\n    &__origin{\r\n      margin-left: .06rem;\r\n      line-height: .2rem;\r\n      font-size: .12rem;\r\n      color:$light-fontColor;\r\n      text-decoration: line-through;\r\n    }\r\n    .product__number{\r\n      position: absolute;\r\n      right:0;\r\n      bottom:.12rem;\r\n      &__minus,&__plus{\r\n        display: inline-block;\r\n        width: .2rem;\r\n        height: .2rem;\r\n        line-height: .16rem;\r\n        border-radius: 50%;\r\n        font-size: .2rem;     \r\n        text-align: center;\r\n      }\r\n      &__minus{\r\n        border: .01rem solid $medium-fontColor;\r\n        color: $medium-fontColor;\r\n        margin-right: .05rem;\r\n      }\r\n      &__plus{\r\n        margin-left: .05rem;\r\n        background-color: #0091ff;\r\n        color: $bgColor;\r\n      }\r\n    }\r\n  }\r\n  \r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}