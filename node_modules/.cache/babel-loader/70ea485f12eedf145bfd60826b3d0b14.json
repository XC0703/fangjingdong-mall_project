{"ast":null,"code":"import axios from 'axios'; // 创建axios实例\n\nconst instance = axios.create({\n  baseURL: 'https://www.fastmock.site/mock/ae8e9031947a302fed5f92425995aa19/jd',\n  timeout: 10000\n}); // 手动封装的get方法，使请求默认带上baseURL\n\nexport const get = (url, params = {}) => {\n  return new Promise((resolve, reject) => {\n    instance.get(url, {\n      params\n    }, {}).then(response => {\n      // 本来是resolve(response)的，但是不用返回这么多，返回需要的data数据即可\n      resolve(response.data);\n    }, err => {\n      reject(err);\n    });\n  });\n}; // 手动封装的post方法，使请求默认带上baseURL\n\nexport const post = (url, data = {}) => {\n  return new Promise((resolve, reject) => {\n    instance.post(url, data, {\n      // Content-Type 标头告诉客户端实际返回的内容的内容类型。\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      // 本来是resolve(response)的，但是不用返回这么多，返回需要的data数据即可\n      resolve(response.data);\n    }, err => {\n      reject(err);\n    });\n  });\n};","map":{"version":3,"names":["axios","instance","create","baseURL","timeout","get","url","params","Promise","resolve","reject","then","response","data","err","post","headers"],"sources":["D:/StudySoft/VSCode/VSCodeFile/CODE_前端projects/fangjingdong-mall_project/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n// 创建axios实例\r\nconst instance = axios.create({\r\n  baseURL: 'https://www.fastmock.site/mock/ae8e9031947a302fed5f92425995aa19/jd',\r\n  timeout: 10000\r\n})\r\n\r\n// 手动封装的get方法，使请求默认带上baseURL\r\nexport const get = (url, params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance.get(url, {params}, {\r\n    }).then((response) => {\r\n      // 本来是resolve(response)的，但是不用返回这么多，返回需要的data数据即可\r\n      resolve(response.data)\r\n    }, err => {\r\n      reject(err)\r\n    })\r\n  })\r\n}\r\n\r\n// 手动封装的post方法，使请求默认带上baseURL\r\nexport const post = (url, data = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    instance.post(url, data, {\r\n      // Content-Type 标头告诉客户端实际返回的内容的内容类型。\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((response) => {\r\n      // 本来是resolve(response)的，但是不用返回这么多，返回需要的data数据即可\r\n      resolve(response.data)\r\n    }, err => {\r\n      reject(err)\r\n    })\r\n  })\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC5BC,OAAO,EAAE,oEADmB;EAE5BC,OAAO,EAAE;AAFmB,CAAb,CAAjB,C,CAKA;;AACA,OAAO,MAAMC,GAAG,GAAG,CAACC,GAAD,EAAMC,MAAM,GAAG,EAAf,KAAsB;EACvC,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCT,QAAQ,CAACI,GAAT,CAAaC,GAAb,EAAkB;MAACC;IAAD,CAAlB,EAA4B,EAA5B,EACGI,IADH,CACSC,QAAD,IAAc;MACpB;MACAH,OAAO,CAACG,QAAQ,CAACC,IAAV,CAAP;IACD,CAJD,EAIGC,GAAG,IAAI;MACRJ,MAAM,CAACI,GAAD,CAAN;IACD,CAND;EAOD,CARM,CAAP;AASD,CAVM,C,CAYP;;AACA,OAAO,MAAMC,IAAI,GAAG,CAACT,GAAD,EAAMO,IAAI,GAAG,EAAb,KAAoB;EACtC,OAAO,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCT,QAAQ,CAACc,IAAT,CAAcT,GAAd,EAAmBO,IAAnB,EAAyB;MACvB;MACAG,OAAO,EAAE;QACP,gBAAgB;MADT;IAFc,CAAzB,EAKGL,IALH,CAKSC,QAAD,IAAc;MACpB;MACAH,OAAO,CAACG,QAAQ,CAACC,IAAV,CAAP;IACD,CARD,EAQGC,GAAG,IAAI;MACRJ,MAAM,CAACI,GAAD,CAAN;IACD,CAVD;EAWD,CAZM,CAAP;AAaD,CAdM"},"metadata":{},"sourceType":"module"}