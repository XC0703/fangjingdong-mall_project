{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  // 异步组件，只有访问的时候才加载,\"home\"指的是代码包的名字\n  component: () => import(\n  /* webpackChunName:\"home\" */\n  '../views/home/HomeView')\n}, {\n  path: '/shop/:id',\n  name: 'ShopView',\n  component: () => import(\n  /* webpackChunName:\"shop\" */\n  '../views/shop/ShopView')\n}, {\n  path: '/orderConfirm/:id',\n  name: 'OrderConfirmation',\n  component: () => import(\n  /* webpackChunName:\"order\" */\n  '../views/orderConfirm/OrderConfirmation')\n}, {\n  path: '/orderList',\n  name: 'OrderList',\n  component: () => import(\n  /* webpackChunName:\"order\" */\n  '../views/orderList/OrderList')\n}, {\n  path: '/cartList',\n  name: 'CartList',\n  component: () => import(\n  /* webpackChunName:\"order\" */\n  '../views/cartList/CartList')\n}, {\n  path: '/personal',\n  name: 'PersonalInfo',\n  component: () => import(\n  /* webpackChunName:\"order\" */\n  '../views/personal/PersonalInfo')\n}, {\n  path: '/login',\n  name: 'LoginView',\n  component: () => import(\n  /* webpackChunName:\"login\" */\n  '../views/login/LoginView'),\n\n  // 只有访问LoginView这个页面之前才会执行,作用是登录之后无法访问LoginView页面\n  beforeEnter(to, from, next) {\n    const {\n      isLogin\n    } = localStorage; //解构赋值，相当于const isLogin = localStorage.isLogin\n    // 如果已经登录，则跳转到Home页面，否则正常展示当前页面\n\n    isLogin ? next({\n      name: 'Home'\n    }) : next();\n  }\n\n}, {\n  path: '/register',\n  name: 'RegisterView',\n  component: () => import(\n  /* webpackChunName:\"register\" */\n  '../views/register/RegisterView'),\n\n  // 只有访问LoginView这个页面之前才会执行,作用是登录之后无法访问LoginView页面\n  beforeEnter(to, from, next) {\n    const {\n      isLogin\n    } = localStorage; //解构赋值，相当于const isLogin = localStorage.isLogin\n    // 如果已经登录，则跳转到Home页面，否则正常展示当前页面\n\n    isLogin ? next({\n      name: 'Home'\n    }) : next();\n  }\n\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n}); // 路由守卫实现基础登陆校验功能\n// beforeEach表示在初始化时候被调用和每次路由切换之前别调用\n\nrouter.beforeEach((to, from, next) => {\n  // isLogin在本地存储中\n  const isLogin = localStorage.isLogin; //to：进入到哪个路由去\n  //from：从哪个路由离开\n  //next：路由的控制参数，常用的有next(true)和next(false)\n  // 用户没有登录或者当前不是注册页面的时候，无法访问其它页面，只能跳到LoginView页面\n  //其它情况则展示当前页面\n\n  if (!isLogin && to.name !== 'LoginView' && to.name !== 'RegisterView') {\n    next({\n      name: 'LoginView'\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","routes","path","name","component","beforeEnter","to","from","next","isLogin","localStorage","router","history","beforeEach"],"sources":["D:/StudySoft/VSCode/VSCodeFile/CODE_前端projects/fangjingdong-mall_project/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\r\n\r\nconst routes = [\r\n  {\r\n    path:'/',\r\n    name:'Home',\r\n    // 异步组件，只有访问的时候才加载,\"home\"指的是代码包的名字\r\n    component:()=>import(/* webpackChunName:\"home\" */ '../views/home/HomeView')\r\n  },\r\n  {\r\n    path:'/shop/:id',\r\n    name:'ShopView',\r\n    component:()=>import(/* webpackChunName:\"shop\" */ '../views/shop/ShopView')\r\n  },\r\n  {\r\n    path:'/orderConfirm/:id',\r\n    name:'OrderConfirmation',\r\n    component:()=>import(/* webpackChunName:\"order\" */ '../views/orderConfirm/OrderConfirmation'),\r\n  },\r\n  {\r\n    path:'/orderList',\r\n    name:'OrderList',\r\n    component:()=>import(/* webpackChunName:\"order\" */ '../views/orderList/OrderList'),\r\n  },\r\n  {\r\n    path:'/cartList',\r\n    name:'CartList',\r\n    component:()=>import(/* webpackChunName:\"order\" */ '../views/cartList/CartList'),\r\n  },\r\n  {\r\n    path:'/personal',\r\n    name:'PersonalInfo',\r\n    component:()=>import(/* webpackChunName:\"order\" */ '../views/personal/PersonalInfo'),\r\n  },\r\n  {\r\n    path:'/login',\r\n    name:'LoginView',\r\n    component:()=>import(/* webpackChunName:\"login\" */ '../views/login/LoginView'),\r\n    // 只有访问LoginView这个页面之前才会执行,作用是登录之后无法访问LoginView页面\r\n    beforeEnter(to,from,next){\r\n      const {isLogin} = localStorage;//解构赋值，相当于const isLogin = localStorage.isLogin\r\n      // 如果已经登录，则跳转到Home页面，否则正常展示当前页面\r\n      isLogin ? next({name:'Home'}): next();\r\n    }\r\n  },\r\n  {\r\n    path:'/register',\r\n    name:'RegisterView',\r\n    component:()=>import(/* webpackChunName:\"register\" */ '../views/register/RegisterView'),\r\n    // 只有访问LoginView这个页面之前才会执行,作用是登录之后无法访问LoginView页面\r\n    beforeEnter(to,from,next){\r\n      const {isLogin} = localStorage;//解构赋值，相当于const isLogin = localStorage.isLogin\r\n      // 如果已经登录，则跳转到Home页面，否则正常展示当前页面\r\n      isLogin ? next({name:'Home'}): next();\r\n    }\r\n  },\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory(),\r\n  routes\r\n})\r\n\r\n// 路由守卫实现基础登陆校验功能\r\n// beforeEach表示在初始化时候被调用和每次路由切换之前别调用\r\nrouter.beforeEach((to,from,next)=>{\r\n  // isLogin在本地存储中\r\n  const isLogin = localStorage.isLogin;\r\n\r\n  //to：进入到哪个路由去\r\n  //from：从哪个路由离开\r\n  //next：路由的控制参数，常用的有next(true)和next(false)\r\n\r\n  // 用户没有登录或者当前不是注册页面的时候，无法访问其它页面，只能跳到LoginView页面\r\n  //其它情况则展示当前页面\r\n  if(!isLogin&&(to.name !=='LoginView'&&to.name !=='RegisterView')){\r\n    next({name:'LoginView'})\r\n  }else{\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,oBAAvB,QAAmD,YAAnD;AAEA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAC,GADP;EAEEC,IAAI,EAAC,MAFP;EAGE;EACAC,SAAS,EAAC,MAAI;EAAO;EAA6B,wBAApC;AAJhB,CADa,EAOb;EACEF,IAAI,EAAC,WADP;EAEEC,IAAI,EAAC,UAFP;EAGEC,SAAS,EAAC,MAAI;EAAO;EAA6B,wBAApC;AAHhB,CAPa,EAYb;EACEF,IAAI,EAAC,mBADP;EAEEC,IAAI,EAAC,mBAFP;EAGEC,SAAS,EAAC,MAAI;EAAO;EAA8B,yCAArC;AAHhB,CAZa,EAiBb;EACEF,IAAI,EAAC,YADP;EAEEC,IAAI,EAAC,WAFP;EAGEC,SAAS,EAAC,MAAI;EAAO;EAA8B,8BAArC;AAHhB,CAjBa,EAsBb;EACEF,IAAI,EAAC,WADP;EAEEC,IAAI,EAAC,UAFP;EAGEC,SAAS,EAAC,MAAI;EAAO;EAA8B,4BAArC;AAHhB,CAtBa,EA2Bb;EACEF,IAAI,EAAC,WADP;EAEEC,IAAI,EAAC,cAFP;EAGEC,SAAS,EAAC,MAAI;EAAO;EAA8B,gCAArC;AAHhB,CA3Ba,EAgCb;EACEF,IAAI,EAAC,QADP;EAEEC,IAAI,EAAC,WAFP;EAGEC,SAAS,EAAC,MAAI;EAAO;EAA8B,0BAArC,CAHhB;;EAIE;EACAC,WAAW,CAACC,EAAD,EAAIC,IAAJ,EAASC,IAAT,EAAc;IACvB,MAAM;MAACC;IAAD,IAAYC,YAAlB,CADuB,CACQ;IAC/B;;IACAD,OAAO,GAAGD,IAAI,CAAC;MAACL,IAAI,EAAC;IAAN,CAAD,CAAP,GAAwBK,IAAI,EAAnC;EACD;;AATH,CAhCa,EA2Cb;EACEN,IAAI,EAAC,WADP;EAEEC,IAAI,EAAC,cAFP;EAGEC,SAAS,EAAC,MAAI;EAAO;EAAiC,gCAAxC,CAHhB;;EAIE;EACAC,WAAW,CAACC,EAAD,EAAIC,IAAJ,EAASC,IAAT,EAAc;IACvB,MAAM;MAACC;IAAD,IAAYC,YAAlB,CADuB,CACQ;IAC/B;;IACAD,OAAO,GAAGD,IAAI,CAAC;MAACL,IAAI,EAAC;IAAN,CAAD,CAAP,GAAwBK,IAAI,EAAnC;EACD;;AATH,CA3Ca,CAAf;AAwDA,MAAMG,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEZ,oBAAoB,EADH;EAE1BC;AAF0B,CAAD,CAA3B,C,CAKA;AACA;;AACAU,MAAM,CAACE,UAAP,CAAkB,CAACP,EAAD,EAAIC,IAAJ,EAASC,IAAT,KAAgB;EAChC;EACA,MAAMC,OAAO,GAAGC,YAAY,CAACD,OAA7B,CAFgC,CAIhC;EACA;EACA;EAEA;EACA;;EACA,IAAG,CAACA,OAAD,IAAWH,EAAE,CAACH,IAAH,KAAW,WAAX,IAAwBG,EAAE,CAACH,IAAH,KAAW,cAAjD,EAAiE;IAC/DK,IAAI,CAAC;MAACL,IAAI,EAAC;IAAN,CAAD,CAAJ;EACD,CAFD,MAEK;IACHK,IAAI;EACL;AACF,CAfD;AAiBA,eAAeG,MAAf"},"metadata":{},"sourceType":"module"}