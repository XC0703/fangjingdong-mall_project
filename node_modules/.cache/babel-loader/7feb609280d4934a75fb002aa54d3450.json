{"ast":null,"code":"import { useCommonCartEffect } from '../../effects/cartEffects';\nimport { useRoute, useRouter } from 'vue-router';\nimport { post } from '../../utils/request';\nimport { useStore } from 'vuex';\nimport { ref } from 'vue'; // 蒙层展示相关的逻辑\n\nconst useShowMaskEffect = () => {\n  const showConfirm = ref(false);\n\n  const handleShowConfirmChange = status => {\n    showConfirm.value = status;\n  };\n\n  return {\n    showConfirm,\n    handleShowConfirmChange\n  };\n};\n\nexport default {\n  name: 'OrderFooter',\n\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const store = useStore(); // 转成数字\n\n    const shopId = parseInt(route.params.id, 10);\n    const {\n      calculations,\n      shopName,\n      productList\n    } = useCommonCartEffect(shopId); // 蒙层弹出确认窗口\n\n    const {\n      showConfirm,\n      handleShowConfirmChange\n    } = useShowMaskEffect(); // 下单\n\n    const handleConfirmOrder = async isCanceled => {\n      // 将从store获取到的数据转化为接口需要的格式\n      // 因为是对象，只能循环赋值\n      const products = [];\n\n      for (let i in productList.value) {\n        const product = productList.value[i];\n        products.push({\n          id: parseInt(product._id, 10),\n          num: product.count\n        });\n      } // 可以使用try/catch监听Promise 返回状态，try为成功，catch失败\n\n\n      try {\n        // 每遇到一个await都会先返回,再往下执行,变成了同步操作\n        // 传入参数发送请求\n        const result = await post('/api/order', {\n          addressId: 1,\n          shopId,\n          shopName: shopName.value,\n          isCanceled,\n          products\n        }); // result?.data?.errno的意思是尝试获取result中的data中的error属性，它和result.data.errno的意思是一样的，但是比result.data.errno的容错性更高。\n        // 代码会尝试查找errno，如果查找不到，会返回undefined，而不会报错\n\n        if (result?.errno === 0) {\n          store.commit('cleanCartProducts', {\n            shopId\n          });\n          router.push({\n            name: 'Home'\n          });\n        }\n      } catch (e) {\n        // 提示下单失败\n        alert('下单失败');\n      }\n    };\n\n    return {\n      calculations,\n      shopName,\n      productList,\n      showConfirm,\n      handleShowConfirmChange,\n      handleConfirmOrder\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAgCA,SAASA,mBAAT,QAAoC,2BAApC;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,YAAnC;AACA,SAAQC,IAAR,QAAmB,qBAAnB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,GAAT,QAAoB,KAApB,C,CAGA;;AACA,MAAMC,iBAAgB,GAAI,MAAM;EAC9B,MAAMC,WAAU,GAAIF,GAAG,CAAC,KAAD,CAAvB;;EACA,MAAMG,uBAAsB,GAAKC,MAAD,IAAY;IAC1CF,WAAW,CAACG,KAAZ,GAAoBD,MAApB;EACF,CAFA;;EAGA,OAAO;IAAEF,WAAF;IAAeC;EAAf,CAAP;AACF,CANA;;AAQA,eAAgB;EACZG,IAAI,EAAC,aADO;;EAEZC,KAAK,GAAG;IACJ,MAAMC,KAAI,GAAIZ,QAAQ,EAAtB;IACA,MAAMa,MAAK,GAAIZ,SAAS,EAAxB;IACA,MAAMa,KAAI,GAAIX,QAAQ,EAAtB,CAHI,CAIJ;;IACA,MAAMY,MAAK,GAAIC,QAAQ,CAACJ,KAAK,CAACK,MAAN,CAAaC,EAAd,EAAiB,EAAjB,CAAvB;IACA,MAAM;MAAEC,YAAF;MAAeC,QAAf;MAAwBC;IAAxB,IAAwCtB,mBAAmB,CAACgB,MAAD,CAAjE,CANI,CAQJ;;IACA,MAAM;MAAET,WAAF;MAAeC;IAAf,IAA2CF,iBAAiB,EAAlE,CATI,CAWJ;;IACA,MAAMiB,kBAAiB,GAAI,MAAMC,UAAN,IAAmB;MAC9C;MACA;MACA,MAAMC,QAAO,GAAI,EAAjB;;MACA,KAAI,IAAIC,CAAR,IAAaJ,WAAW,CAACZ,KAAzB,EAA+B;QAC3B,MAAMiB,OAAM,GAAIL,WAAW,CAACZ,KAAZ,CAAkBgB,CAAlB,CAAhB;QACAD,QAAQ,CAACG,IAAT,CAAc;UACVT,EAAE,EAACF,QAAQ,CAACU,OAAO,CAACE,GAAT,EAAa,EAAb,CADD;UAEVC,GAAG,EAACH,OAAO,CAACI;QAFF,CAAd;MAIJ,CAV8C,CAW9C;;;MACA,IAAG;QACC;QACA;QACA,MAAMC,MAAK,GAAI,MAAM7B,IAAI,CAAC,YAAD,EAAc;UACnC8B,SAAS,EAAC,CADyB;UAEnCjB,MAFmC;UAGnCK,QAAQ,EAACA,QAAQ,CAACX,KAHiB;UAInCc,UAJmC;UAKnCC;QALmC,CAAd,CAAzB,CAHD,CAUC;QACA;;QACA,IAAGO,MAAM,EAAEE,KAAR,KAAgB,CAAnB,EAAqB;UACjBnB,KAAK,CAACoB,MAAN,CAAa,mBAAb,EAAkC;YAAEnB;UAAF,CAAlC;UACAF,MAAM,CAACc,IAAP,CAAY;YAACjB,IAAI,EAAC;UAAN,CAAZ;QACJ;MACC,CAhBL,CAgBK,OAAMyB,CAAN,EAAQ;QACL;QACAC,KAAK,CAAC,MAAD,CAAL;MACJ;IACJ,CAhCA;;IAkCA,OAAO;MACHjB,YADG;MACUC,QADV;MACmBC,WADnB;MAEHf,WAFG;MAEUC,uBAFV;MAGHe;IAHG,CAAP;EAIH;;AApDW,CAAhB","names":["useCommonCartEffect","useRoute","useRouter","post","useStore","ref","useShowMaskEffect","showConfirm","handleShowConfirmChange","status","value","name","setup","route","router","store","shopId","parseInt","params","id","calculations","shopName","productList","handleConfirmOrder","isCanceled","products","i","product","push","_id","num","count","result","addressId","errno","commit","e","alert"],"sourceRoot":"","sources":["D:\\StudySoft\\VSCode\\VSCodeFile\\CODE_前端projects\\fangjingdong-mall_project\\src\\views\\order\\OrderFooter.vue"],"sourcesContent":["<template>\r\n    <div class=\"order\">\r\n        <div class=\"order__price\">实付金额￥<b>{{calculations.price}}</b></div>\r\n        <div \r\n            class=\"order__btn\"\r\n            @click=\"() => handleShowConfirmChange(true)\"\r\n        >提交订单</div>\r\n    </div>\r\n    <div\r\n        class=\"mask\"\r\n        v-show=\"showConfirm\"\r\n        @click=\"() => handleShowConfirmChange(false)\"\r\n    >\r\n    <!-- mask__content点击事件无效 -->\r\n        <div class=\"mask__content\" @click.stop>\r\n            <h3 class=\"mask__content__title\">确认要离开收银台？</h3>\r\n            <p class=\"mask__content__desc\">请尽快完成支付，否则将被取消</p>\r\n            <div class=\"mask__content__btns\">\r\n                <div\r\n                    class=\"mask__content__btn mask__content__btn--first\"\r\n                    @click=\"() => handleConfirmOrder(true)\"\r\n                    >取消订单</div>\r\n                <div\r\n                    class=\"mask__content__btn mask__content__btn--last\"\r\n                    @click=\"() => handleConfirmOrder(false)\"\r\n                >确认支付</div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { useCommonCartEffect } from '../../effects/cartEffects'\r\nimport { useRoute,useRouter } from 'vue-router';\r\nimport {post} from '../../utils/request';\r\nimport { useStore } from 'vuex';\r\nimport { ref } from 'vue';\r\n\r\n\r\n// 蒙层展示相关的逻辑\r\nconst useShowMaskEffect = () => {\r\n  const showConfirm = ref(false)\r\n  const handleShowConfirmChange = (status) => {\r\n    showConfirm.value = status\r\n  }\r\n  return { showConfirm, handleShowConfirmChange }\r\n}\r\n\r\nexport default ({\r\n    name:'OrderFooter',\r\n    setup() {\r\n        const route = useRoute()\r\n        const router = useRouter()\r\n        const store = useStore()\r\n        // 转成数字\r\n        const shopId = parseInt(route.params.id,10)\r\n        const { calculations,shopName,productList } = useCommonCartEffect(shopId)\r\n\r\n        // 蒙层弹出确认窗口\r\n        const { showConfirm, handleShowConfirmChange } = useShowMaskEffect(); \r\n\r\n        // 下单\r\n        const handleConfirmOrder = async(isCanceled)=>{\r\n        // 将从store获取到的数据转化为接口需要的格式\r\n        // 因为是对象，只能循环赋值\r\n        const products = [];\r\n        for(let i in productList.value){\r\n            const product = productList.value[i]\r\n            products.push({\r\n                id:parseInt(product._id,10),\r\n                num:product.count\r\n            })\r\n        }       \r\n        // 可以使用try/catch监听Promise 返回状态，try为成功，catch失败\r\n        try{\r\n            // 每遇到一个await都会先返回,再往下执行,变成了同步操作\r\n            // 传入参数发送请求\r\n            const result = await post('/api/order',{\r\n                addressId:1,\r\n                shopId,\r\n                shopName:shopName.value,\r\n                isCanceled,\r\n                products,\r\n            })\r\n            // result?.data?.errno的意思是尝试获取result中的data中的error属性，它和result.data.errno的意思是一样的，但是比result.data.errno的容错性更高。\r\n            // 代码会尝试查找errno，如果查找不到，会返回undefined，而不会报错\r\n            if(result?.errno===0){\r\n                store.commit('cleanCartProducts', { shopId })\r\n                router.push({name:'Home'})\r\n            }\r\n            }catch(e){\r\n                // 提示下单失败\r\n                alert('下单失败')\r\n            }\r\n        }\r\n\r\n        return { \r\n            calculations,shopName,productList,\r\n            showConfirm, handleShowConfirmChange,\r\n            handleConfirmOrder }\r\n    },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../../style/viriables.scss';\r\n.order{\r\n    display: flex;\r\n    height: .49rem;\r\n    line-height: .49rem;\r\n    background-color: $bgColor;\r\n    position: absolute;\r\n    bottom:0;\r\n    left:0;\r\n    right: 0;\r\n    &__price{\r\n        flex:1;\r\n        text-indent: .24rem;\r\n        font-size: .14rem;\r\n        color:$content-fontcolor;\r\n    }\r\n    &__btn{\r\n        width: .98rem;\r\n        background: #4FB0F9;\r\n        color:#fff;\r\n        text-align: center;\r\n        font-size: .14rem;\r\n    }\r\n}\r\n.mask {\r\n  z-index: 1;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  background: rgba(0, 0, 0, .5);\r\n  &__content {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 3rem;\r\n    height: 1.56rem;\r\n    background: $bgColor;\r\n    text-align: center;\r\n    border-radius: .04rem;\r\n    &__title {\r\n      margin: .24rem 0 0 0;\r\n      line-height: .26rem;\r\n      font-size: .18rem;\r\n      color: $content-fontcolor;\r\n    }\r\n    &__desc {\r\n      margin: .08rem 0 0 0;\r\n      font-size: .14rem;\r\n      color: $medium-fontColor;\r\n    }\r\n    &__btns {\r\n      display: flex;\r\n      margin: .24rem .58rem;\r\n    }\r\n    &__btn {\r\n      flex: 1;\r\n      width: .8rem;\r\n      line-height: .32rem;\r\n      border-radius: .16rem;\r\n      font-size: .14rem;\r\n      &--first {\r\n        margin-right: .12rem;\r\n        border: .01rem solid $btn-bgcolor;\r\n        color: $btn-bgcolor;\r\n      }\r\n      &--last {\r\n        margin-left: .12rem;\r\n        background: $btn-bgcolor;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}