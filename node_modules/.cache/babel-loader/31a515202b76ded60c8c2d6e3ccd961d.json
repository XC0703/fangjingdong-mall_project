{"ast":null,"code":"import { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute } from 'vue-router'; // 购物车数据获取相关的逻辑\n\nconst useCartEffect = () => {\n  // 使用store存储\n  const store = useStore();\n  const cartCount = store.state.cartList; // 获取路由\n\n  const route = useRoute();\n  const shopId = route.params.shopId; // 计算属性\n  //就是获取 state 中对应店铺的数据，然后在 computed 中来个循环，\n  //循环商铺里的所有商品信息，把他们的 count 值加一起就行。\n\n  const total = computed(() => {\n    let cartShop = cartCount[shopId];\n    let count = 0;\n\n    if (cartShop) {\n      for (let i in cartShop) {\n        const product = cartShop[i];\n        count += product.count;\n      }\n    }\n\n    return count;\n  });\n  const price = computed(() => {\n    let cartShop = cartCount[shopId];\n    let pricesum = 0;\n\n    if (cartShop) {\n      for (let i in cartShop) {\n        const product = cartShop[i];\n        pricesum += product.price * product.count;\n      }\n    } // 保留两位小数\n\n\n    return pricesum.toFixed(2);\n  });\n  return {\n    total,\n    price\n  };\n};\n\nexport default {\n  name: 'CartFooter',\n\n  setup() {\n    const {\n      total,\n      price\n    } = useCartEffect();\n    return {\n      total,\n      price\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAgBA,SAASA,QAAT,QAAyB,KAAzB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;;AACA,MAAMC,aAAY,GAAI,MAAM;EAC1B;EACA,MAAMC,KAAI,GAAIH,QAAQ,EAAtB;EACA,MAAMI,SAAQ,GAAID,KAAK,CAACE,KAAN,CAAYC,QAA9B,CAH0B,CAI1B;;EACA,MAAMC,KAAI,GAAIN,QAAQ,EAAtB;EACA,MAAMO,MAAK,GAAID,KAAK,CAACE,MAAN,CAAaD,MAA5B,CAN0B,CAQ1B;EACA;EACA;;EACA,MAAME,KAAI,GAAIX,QAAQ,CAAC,MAAI;IACzB,IAAIY,QAAO,GAAIP,SAAS,CAACI,MAAD,CAAxB;IACA,IAAII,KAAI,GAAI,CAAZ;;IACA,IAAGD,QAAH,EAAY;MACV,KAAK,IAAIE,CAAT,IAAcF,QAAd,EAAuB;QACrB,MAAMG,OAAM,GAAKH,QAAQ,CAACE,CAAD,CAAzB;QACAD,KAAK,IAAEE,OAAO,CAACF,KAAf;MACF;IACF;;IACA,OAAOA,KAAP;EACD,CAVqB,CAAtB;EAYA,MAAMG,KAAI,GAAIhB,QAAQ,CAAC,MAAM;IACzB,IAAIY,QAAO,GAAIP,SAAS,CAACI,MAAD,CAAxB;IACA,IAAIQ,QAAO,GAAI,CAAf;;IACA,IAAIL,QAAJ,EAAc;MACZ,KAAK,IAAIE,CAAT,IAAcF,QAAd,EAAwB;QACtB,MAAMG,OAAM,GAAIH,QAAQ,CAACE,CAAD,CAAxB;QACAG,QAAO,IAAMF,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACF,KAArC;MACF;IACF,CARyB,CASzB;;;IACA,OAAOI,QAAQ,CAACC,OAAT,CAAiB,CAAjB,CAAP;EACD,CAXmB,CAAtB;EAaA,OAAO;IAACP,KAAD;IAAOK;EAAP,CAAP;AACF,CArCA;;AAwCA,eAAe;EACXG,IAAI,EAAC,YADM;;EAEXC,KAAK,GAAE;IAEL,MAAM;MAACT,KAAD;MAAOK;IAAP,IAAgBb,aAAa,EAAnC;IAEA,OAAO;MAACQ,KAAD;MAAOK;IAAP,CAAP;EACF;;AAPW,CAAf","names":["computed","useStore","useRoute","useCartEffect","store","cartCount","state","cartList","route","shopId","params","total","cartShop","count","i","product","price","pricesum","toFixed","name","setup"],"sourceRoot":"","sources":["D:\\StudySoft\\VSCode\\VSCodeFile\\CODE_前端projects\\fangjingdong-mall_project\\src\\views\\shop\\CartFooter.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart\">\r\n    <div class=\"check\">\r\n      <div class=\"check__icon\">\r\n        <img src=\"http://www.dell-lee.com/imgs/vue3/basket.png\" alt=\"\" class=\"check__icon__img\">\r\n        <div class=\"check__icon__tag\">{{total}}</div>\r\n      </div>\r\n      <div class=\"check__info\">\r\n        总计：<span class=\"check__info__price\">&yen;{{price}}</span>\r\n      </div>\r\n      <div class=\"check__btn\">去结算</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRoute } from 'vue-router'\r\n\r\n// 购物车数据获取相关的逻辑\r\nconst useCartEffect = () => {\r\n  // 使用store存储\r\n  const store = useStore()\r\n  const cartCount = store.state.cartList\r\n  // 获取路由\r\n  const route = useRoute()\r\n  const shopId = route.params.shopId\r\n  \r\n  // 计算属性\r\n  //就是获取 state 中对应店铺的数据，然后在 computed 中来个循环，\r\n  //循环商铺里的所有商品信息，把他们的 count 值加一起就行。\r\n  const total = computed(()=>{\r\n    let cartShop = cartCount[shopId]\r\n    let count = 0;\r\n    if(cartShop){\r\n      for (let i in cartShop){\r\n        const product  = cartShop[i];\r\n        count+=product.count\r\n      }\r\n    }\r\n    return count;\r\n  })\r\n\r\n  const price = computed(() => {\r\n      let cartShop = cartCount[shopId]\r\n      let pricesum = 0\r\n      if (cartShop) {\r\n        for (let i in cartShop) {\r\n          const product = cartShop[i]\r\n          pricesum += (product.price * product.count)\r\n        }\r\n      }\r\n      // 保留两位小数\r\n      return pricesum.toFixed(2)\r\n    })\r\n\r\n  return {total,price}\r\n}\r\n\r\n\r\nexport default {\r\n    name:'CartFooter',\r\n    setup(){\r\n\r\n      const {total,price} = useCartEffect();\r\n\r\n      return {total,price}\r\n    }\r\n}\r\n</script>\r\n \r\n<style lang=\"scss\" scoped>\r\n.cart {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n.check {\r\n  display: flex;\r\n  height: .49rem;\r\n  border-top: .01rem solid #F1F1F1;\r\n  &__icon {\r\n    position: relative;\r\n    width: .84rem;\r\n    &__img {\r\n      display: block;\r\n      margin: .12rem auto;\r\n      width: .28rem;\r\n      height: .26rem;\r\n    }\r\n    &__tag {\r\n      position: absolute;\r\n      right: .2rem;\r\n      top: .04rem;\r\n      color: #fff;\r\n      width: .2rem;\r\n      height: .2rem;\r\n      transform: scale(.5);\r\n      background-color: #E93B3B;\r\n      border-radius: 50%;\r\n      font-size: .12rem;\r\n      text-align: center;\r\n      line-height: .2rem;\r\n    }\r\n  }\r\n  &__info {\r\n    flex: 1;\r\n    margin: auto 0;\r\n    color: #333;\r\n    font-size: .12rem;\r\n    &__price {\r\n      color: #E93B3B;\r\n      font-size: .18rem;\r\n    }\r\n  }\r\n  &__btn {\r\n    width: .98rem;\r\n    line-height: .49rem;\r\n    text-align: center;\r\n    color: #fff;\r\n    font-size: .14rem;\r\n    background-color: #4FB0F9;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}