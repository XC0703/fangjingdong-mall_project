{"ast":null,"code":"import { onMounted, onBeforeUnmount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../constants/index.mjs';\nimport { EVENT_CODE } from '../../constants/aria.mjs';\nlet registeredEscapeHandlers = [];\n\nconst useEscapeKeydown = handler => {\n  const cachedHandler = e => {\n    const event = e;\n\n    if (event.key === EVENT_CODE.esc) {\n      registeredEscapeHandlers.forEach(registeredHandler => registeredHandler(event));\n    }\n  };\n\n  onMounted(() => {\n    if (registeredEscapeHandlers.length === 0) {\n      document.addEventListener(\"keydown\", cachedHandler);\n    }\n\n    if (isClient) registeredEscapeHandlers.push(handler);\n  });\n  onBeforeUnmount(() => {\n    registeredEscapeHandlers = registeredEscapeHandlers.filter(registeredHandler => registeredHandler !== handler);\n\n    if (registeredEscapeHandlers.length === 0) {\n      if (isClient) document.removeEventListener(\"keydown\", cachedHandler);\n    }\n  });\n};\n\nexport { useEscapeKeydown };","map":{"version":3,"mappings":";;;;AAGA,IAAIA,wBAAwB,GAAG,EAA/B;;AACY,MAACC,gBAAgB,GAAIC,OAAD,IAAa;EAC3C,MAAMC,aAAa,GAAIC,CAAD,IAAO;IAC3B,MAAMC,KAAK,GAAGD,CAAd;;IACA,IAAIC,KAAK,CAACC,GAAN,KAAcC,UAAU,CAACC,GAA7B,EAAkC;MAChCR,wBAAwB,CAACS,OAAzB,CAAkCC,iBAAD,IAAuBA,iBAAiB,CAACL,KAAD,CAAzE;IACD;EACF,CALD;;EAMAM,SAAS,CAAC,MAAM;IACd,IAAIX,wBAAwB,CAACY,MAAzB,KAAoC,CAAxC,EAA2C;MACzCC,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCX,aAArC;IACD;;IACD,IAAIY,QAAJ,EACEf,wBAAwB,CAACgB,IAAzB,CAA8Bd,OAA9B;EACH,CANQ,CAAT;EAOAe,eAAe,CAAC,MAAM;IACpBjB,wBAAwB,GAAGA,wBAAwB,CAACkB,MAAzB,CAAiCR,iBAAD,IAAuBA,iBAAiB,KAAKR,OAA7E,CAA3B;;IACA,IAAIF,wBAAwB,CAACY,MAAzB,KAAoC,CAAxC,EAA2C;MACzC,IAAIG,QAAJ,EACEF,QAAQ,CAACM,mBAAT,CAA6B,SAA7B,EAAwChB,aAAxC;IACH;EACF,CANc,CAAf;AAOF,CArBY","names":["registeredEscapeHandlers","useEscapeKeydown","handler","cachedHandler","e","event","key","EVENT_CODE","esc","forEach","registeredHandler","onMounted","length","document","addEventListener","isClient","push","onBeforeUnmount","filter","removeEventListener"],"sources":["../../../../../packages/hooks/use-escape-keydown/index.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { EVENT_CODE } from '@element-plus/constants'\n\nlet registeredEscapeHandlers: ((e: KeyboardEvent) => void)[] = []\n\nexport const useEscapeKeydown = (handler: (e: KeyboardEvent) => void) => {\n  const cachedHandler = (e: Event) => {\n    const event = e as KeyboardEvent\n    if (event.key === EVENT_CODE.esc) {\n      registeredEscapeHandlers.forEach((registeredHandler) =>\n        registeredHandler(event)\n      )\n    }\n  }\n\n  onMounted(() => {\n    if (registeredEscapeHandlers.length === 0) {\n      document.addEventListener('keydown', cachedHandler)\n    }\n    if (isClient) registeredEscapeHandlers.push(handler)\n  })\n\n  onBeforeUnmount(() => {\n    registeredEscapeHandlers = registeredEscapeHandlers.filter(\n      (registeredHandler) => registeredHandler !== handler\n    )\n    if (registeredEscapeHandlers.length === 0) {\n      if (isClient) document.removeEventListener('keydown', cachedHandler)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}