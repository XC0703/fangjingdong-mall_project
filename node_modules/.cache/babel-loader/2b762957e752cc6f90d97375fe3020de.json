{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7b20c76c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"wrapper__img\",\n  src: \"http://www.dell-lee.com/imgs/vue3/user.png\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"wrapper__input\"\n};\nconst _hoisted_4 = {\n  class: \"wrapper__input\"\n};\nconst _hoisted_5 = {\n  class: \"wrapper__input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ToastView = _resolveComponent(\"ToastView\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"wrapper__input__content\",\n    placeholder: \"请输入用户名\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.username]])]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"wrapper__input__content\",\n    placeholder: \"请输入密码\",\n    autocomplete: \"new-password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.password]])]), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"wrapper__input__content\",\n    placeholder: \"确认密码\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.ensurement = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.ensurement]])]), _createElementVNode(\"div\", {\n    class: \"wrapper__register-button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.handleRegister && $setup.handleRegister(...args))\n  }, \"注册\"), _createElementVNode(\"div\", {\n    class: \"wrapper__register-link\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.handleLoginClick && $setup.handleLoginClick(...args))\n  }, \"已有账号去登陆\"), $setup.show ? (_openBlock(), _createBlock(_component_ToastView, {\n    key: 0,\n    message: $setup.toastMessage\n  }, null, 8\n  /* PROPS */\n  , [\"message\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;gEACTC,oBAA4E,KAA5E,EAA4E;EAAvED,KAAK,EAAC,cAAiE;EAAlDE,GAAG,EAAC;AAA8C,CAA5E;;AAAA;;;EACKF,KAAK,EAAC;;;EAONA,KAAK,EAAC;;;EASNA,KAAK,EAAC;;;;;uBAlBbG,oBA6BM,KA7BN,cA6BM,CA5BJC,UA4BI,EA3BJH,oBAMM,KANN,cAMM,iBALJA,oBAIE,OAJF,EAIE;IAHAD,KAAK,EAAC,yBAGN;IAFAK,WAAW,EAAC,QAEZ;+DADSC,kBAAQC;EACjB,CAJF;;EAAA,kBAGWD,kBAEP,CANN,CA2BI,EApBJL,oBAQM,KARN,cAQM,iBAPJA,oBAME,OANF,EAME;IALAO,IAAI,EAAC,UAKL;IAJAR,KAAK,EAAC,yBAIN;IAHAK,WAAW,EAAC,OAGZ;IAFAI,YAAY,EAAC,cAEb;+DADSH,kBAAQC;EACjB,CANF;;EAAA,kBAKWD,kBAEP,CARN,CAoBI,EAXJL,oBAOM,KAPN,cAOM,iBANJA,oBAKE,OALF,EAKE;IAJAO,IAAI,EAAC,UAIL;IAHAR,KAAK,EAAC,yBAGN;IAFAK,WAAW,EAAC,MAEZ;+DADSC,oBAAUC;EACnB,CALF;;EAAA,kBAIWD,oBAEP,CAPN,CAWI,EAHJL,oBAAsE,KAAtE,EAAsE;IAAjED,KAAK,EAAC,0BAA2D;IAA/BU,OAAK,yCAAEJ,uDAAF;EAA0B,CAAtE,EAA8D,IAA9D,CAGI,EAFJL,oBAA2E,KAA3E,EAA2E;IAAtED,KAAK,EAAC,wBAAgE;IAAtCU,OAAK,yCAAEJ,2DAAF;EAAiC,CAA3E,EAA8D,SAA9D,CAEI,EADaA,6BAAjBK,aAAiDC,oBAAjD,EAAiD;UAAA;IAAzBC,OAAO,EAAEP;EAAgB,CAAjD;;EAAA,mDACI,CA7BN","names":["class","_createElementVNode","src","_createElementBlock","_hoisted_2","placeholder","$setup","$event","type","autocomplete","onClick","_createBlock","_component_ToastView","message"],"sourceRoot":"","sources":["D:\\StudySoft\\VSCode\\VSCodeFile\\CODE_前端projects\\fangjingdong-mall_project\\src\\views\\register\\RegisterView.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <img class=\"wrapper__img\" src=\"http://www.dell-lee.com/imgs/vue3/user.png\"/>\n    <div class=\"wrapper__input\">\n      <input\n        class=\"wrapper__input__content\"\n        placeholder=\"请输入用户名\"\n        v-model=\"username\"\n      />\n    </div>\n    <div class=\"wrapper__input\">\n      <input\n        type=\"password\"\n        class=\"wrapper__input__content\"\n        placeholder=\"请输入密码\"\n        autocomplete=\"new-password\"\n        v-model=\"password\"\n      />\n    </div>\n    <div class=\"wrapper__input\">\n      <input\n        type=\"password\"\n        class=\"wrapper__input__content\"\n        placeholder=\"确认密码\"\n        v-model=\"ensurement\"\n      />\n    </div>\n    <div class=\"wrapper__register-button\" @click=\"handleRegister\">注册</div>\n    <div class=\"wrapper__register-link\" @click=\"handleLoginClick\">已有账号去登陆</div>\n    <ToastView v-if=\"show\" :message=\"toastMessage\" />\n  </div>\n</template>\n\n<script>\nimport { useRouter } from 'vue-router';\nimport {reactive, toRefs} from 'vue';\nimport {post} from '../../utils/request';\nimport ToastView,{useToastEffect} from '../../components/ToastView';\n\n// 注册逻辑处理\nconst useRegisterEffect = (showToast)=>{\n    // 获取路由实例\n    const router = useRouter();\n    //reactive 是 Vue3 中提供的实现响应式数据的方法。\n    const data = reactive({\n      username:'',\n      password:'',\n      ensurement:''\n    })//到这里setup()函数只能导出data\n    // toRefs 用于将响应式对象转换为结果对象，其中结果对象的每个属性都是指向原始对象相应属性的ref\n    const {username,password,ensurement} = toRefs(data);//到这里setup()函数可以导出username和password\n    const handleRegister = async()=>{\n      // 可以使用try/catch监听Promise 返回状态，try为成功，catch失败\n      try{\n        // 设置登录状态\n        // 每遇到一个await都会先返回,再往下执行,变成了同步操作\n        const result = await post('/api/user/register',{\n          username:data.username,\n          password:data.password\n        })\n        // result?.data?.errno的意思是尝试获取result中的data中的error属性，它和result.data.errno的意思是一样的，但是比result.data.errno的容错性更高。\n        // 代码会尝试查找errno，如果查找不到，会返回undefined，而不会报错\n        if(result?.errno===0){\n          router.push({name:'LoginView'})\n          showToast('注册成功')\n        }else{\n          showToast('注册失败')\n        }\n      }catch(e){\n        showToast('请求失败')\n      }\n    }\n    return {username,password,ensurement,handleRegister}\n}\n// 跳转到登录页面逻辑处理\nconst useLoginEffect = ()=>{\n    // 获取路由实例\n    const router = useRouter();\n    const handleLoginClick = ()=>{\n      router.push({name:'LoginView'})\n    };\n    return {handleLoginClick}\n}\nexport default {\n  name: 'RegisterView',\n  components:{ToastView},\n  // setup函数的职责：告诉你代码执行的一个流程\n  setup() {\n\n    const {show,toastMessage,showToast} = useToastEffect()\n    const {username,password,ensurement,handleRegister} = useRegisterEffect(showToast);\n    const {handleLoginClick} = useLoginEffect();\n\n    return {\n      username,password,ensurement,show,toastMessage,\n      handleRegister,handleLoginClick\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../../style/viriables.scss';\n.wrapper {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  transform: translateY(-50%);\n  &__img {\n    display: block;\n    margin: 0 auto .4rem auto;\n    width: .66rem;\n    height: .66rem;\n  }\n  &__input {\n    height: .48rem;\n    margin: 0 .4rem .16rem .4rem;\n    padding: 0 .16rem;\n    background: #F9F9F9;\n    border: 1px solid rgba(0,0,0,0.10);\n    border-radius: 6px;\n    border-radius: 6px;\n    &__content {\n      line-height: .48rem;\n      border: none;\n      outline: none;\n      width: 100%;\n      background: none;\n      font-size: .16rem;\n      color: $content-notice-fontcolor;\n      &::placeholder {\n        color: $content-notice-fontcolor;\n      }\n    }\n  }\n  &__register-button {\n    margin: .32rem .4rem .16rem .4rem;\n    line-height: .48rem;\n    background: #0091FF;\n    box-shadow: 0 .04rem .08rem 0 rgba(0,145,255,0.32);\n    border-radius: .04rem;\n    border-radius: .04rem;\n    color: #fff;\n    font-size: .16rem;\n    text-align: center;\n  }\n  &__register-link {\n    text-align: center;\n    font-size: .14rem;\n    color: $content-notice-fontcolor;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}